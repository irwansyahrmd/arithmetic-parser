package arithmeticparser;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author taktik
 */
public class MyGUI extends javax.swing.JFrame {

    private final ArithmeticParser arithmaticParser;

    /**
     * Creates new form MyGUI
     */
    public MyGUI() {
        initComponents();
        arithmaticParser = new ArithmeticParser();
        lexicTabel.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputTF = new javax.swing.JTextField();
        checkBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lexicTabel = new javax.swing.JTable();
        validationLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Arithmetic Parser");
        setResizable(false);

        inputTF.setForeground(new java.awt.Color(153, 153, 153));
        inputTF.setText("Masukkan Ekspresi Arithmatic di sini");
        inputTF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inputTFMouseClicked(evt);
            }
        });
        inputTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputTFKeyPressed(evt);
            }
        });

        checkBtn.setText("Check");
        checkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBtnActionPerformed(evt);
            }
        });

        lexicTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "String", "Besaran Lexic", "Token Lexic", "Ket. Token"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(lexicTabel);
        if (lexicTabel.getColumnModel().getColumnCount() > 0) {
            lexicTabel.getColumnModel().getColumn(2).setMinWidth(70);
            lexicTabel.getColumnModel().getColumn(2).setPreferredWidth(70);
            lexicTabel.getColumnModel().getColumn(2).setMaxWidth(70);
        }

        validationLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        validationLabel.setText("STATUS VALIDASI");
        validationLabel.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(inputTF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
                    .addComponent(validationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(validationLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void checkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBtnActionPerformed
        checkExp();
    }//GEN-LAST:event_checkBtnActionPerformed

    private void inputTFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inputTFMouseClicked
        if (inputTF.getText().equals("Masukkan Ekspresi Arithmatic di sini")) {
            inputTF.setText("");
            inputTF.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_inputTFMouseClicked

    private void inputTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputTFKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            checkExp();
        }
    }//GEN-LAST:event_inputTFKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton checkBtn;
    private javax.swing.JTextField inputTF;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable lexicTabel;
    private javax.swing.JLabel validationLabel;
    // End of variables declaration//GEN-END:variables

    public void setTableLeksik(String input, String tokens,
            ArrayList<String> inputStringList) {
        DefaultTableModel model = (DefaultTableModel) lexicTabel.getModel();
        for (int i = 0; i < tokens.length(); i++) {
            model.addRow(new Object[]{inputStringList.get(i),
                Token.getBesaranLexic(tokens.charAt(i) + ""),
                tokens.charAt(i),
                Token.getKeterangan(tokens.charAt(i) + "")});
        }

    }

    public void clearTable(JTable table) {
        DefaultTableModel dm = (DefaultTableModel) table.getModel();
        int rowCount = dm.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
    }

    private void checkExp() {
        clearTable(lexicTabel);
        String inputAritchmatic = inputTF.getText();
        arithmaticParser.setInput(inputAritchmatic);
        String input = arithmaticParser.getInput();
        String token = arithmaticParser.getToken();
        if (arithmaticParser.isValid()) {
            validationLabel.setText("EKSPRESI ARITHMATIC VALID");
            System.out.println("STATUS : VALID");
        } else {
            validationLabel.setText("EKSPRESI ARITHMATIC TIDAK VALID");
            System.out.println("STATUS : TIDAK VALID");
        }
        System.out.println("###############################\n\n\n\n");
        setTableLeksik(input, token, arithmaticParser.getInputString());
    }
}
